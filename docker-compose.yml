version: '3'
services:
  minio:
    image: minio/minio
    container_name: donut-cloud-minio
    hostname: "minio"
    ports:
      - 9100:9000 # api 端口
      - 9101:9001 # 控制台端口
    environment:
      MINIO_ACCESS_KEY: admin    #管理后台用户名
      MINIO_SECRET_KEY: 123456qwe #管理后台密码，最小8个字符
    volumes:
      - ./data/minio:/data               #映射当前目录下的data目录至容器内/data目录
      - ./docker-config/minio/:/root/.minio/     #映射配置目录
    command: server --console-address ':9001' /data  #指定容器中的目录 /data
#    privileged: true
#    restart: always
    networks:
      - donut-cloud-net
  # 初始化脚本服务 创建桶,并设置open目录位开放目录
  init-bucket:
    image: minio/mc
    container_name: donut-cloud-minio-init-bucket
    depends_on:
      - minio
    volumes:
      - ./logo.png:/root/minio/logo.png
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set donut-minio http://donut-cloud-minio:9000 admin 123456qwe;
      /usr/bin/mc mb donut-minio/donut;
      /usr/bin/mc cp /root/minio/logo.png donut-minio/donut/open/logo.png;
      /usr/bin/mc anonymous set download donut-minio/donut/open/;
      exit 0;
      "
    networks:
      - donut-cloud-net
  redis:
    image: redis:latest
    hostname: "redis"
    ports:
      - 16397:6379
    container_name: donut-common-redis
#    restart: always
    volumes:
      - ./data/redis:/data
      - ./data/redis/logs:/logs
      - ./docker-config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command:
      #      两个写入操作 只是为了解决启动后警告 可以去掉
      /bin/bash -c "redis-server /usr/local/etc/redis/redis.conf"
    networks:
      - donut-cloud-net
  mysql:
    image: mysql:8.0.29
    hostname: donut-cloud-mysql8
    # 指定容器的名称
    container_name: donut-cloud-mysql8
    ports:
      - 13360:3306
    environment:
      MYSQL_DATABASE: donut-system
      # 配置root密码
      MYSQL_ROOT_PASSWORD: "root@123,./"
      TZ: Asia/Shanghai
#    restart: always
    volumes:
      # 挂载数据目录
      - ./data/mysql/:/var/lib/mysql/
      # 挂载配置文件目录
      - ./docker-config/mysql:/etc/mysql/conf.d
      - ./db:/docker-entrypoint-initdb.d
    networks:
      - donut-cloud-net
  nacos:
    image: nacos/nacos-server:v2.3.0-slim
    hostname: donut-cloud-nacos
    container_name: donut-cloud-nacos
    environment:
      PREFER_HOST_MODE: hostname
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: donut-cloud-mysql8
      MYSQL_SERVICE_DB_NAME: nacos
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: "root@123,./"
      MYSQL_SERVICE_DB_PARAM: characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      # 设置账号和密码
      NACOS_AUTH_ENABLE: true
      NACOS_AUTH_IDENTITY_KEY: 2222
      NACOS_AUTH_IDENTITY_VALUE: 2xxx
      NACOS_AUTH_TOKEN: SecretKey012345678901234567890123456789012345678901234567890123456789
    volumes:
      - ./data/nacos/standalone-logs/:/home/nacos/logs
    ports:
      - "8884:8848"
      - "9884:9848"
    depends_on:
      - mysql
    restart: always
    networks:
      - donut-cloud-net
  rmqnamesrv:
    image: apache/rocketmq:5.1.4
    hostname: donut-cloud-rocketmq
    container_name: donut-cloud-rocketmq
    volumes:
      - ./data/rocketmq/nameserver/logs:/home/rocketmq/logs
    command: sh mqnamesrv
    ports:
      - 19876:9876
    networks:
      donut-cloud-net:
        aliases:
          - rmqnamesrv
  rmqbroker:
    image: apache/rocketmq:5.1.4
    container_name: rmqbroker
    ports:
      - 10911:10911
    volumes:
      - ./data/rocketmq/broker/logs:/home/rocketmq/logs
#      - /rocketmq/store/broker-a/store:/home/rocketmq/store
#      - /rocketmq/broker-a/broker-a.conf:/home/rocketmq/rocketmq-4.9.4/conf/broker.conf
    environment:
      TZ: Asia/Shanghai
      NAMESRV_ADDR: "rmqnamesrv:9876"
      JAVA_OPTS: " -Duser.home=/opt"
      JAVA_OPT_EXT: "-server -Xms256m -Xmx256m -Xmn256m"
    command: sh mqbroker
    links:
      - rmqnamesrv
    networks:
      donut-cloud-net:
        aliases:
          - rmqbroker
  rmqconsole:
    image: apacherocketmq/rocketmq-dashboard
    container_name: rmqconsole
    ports:
      - 8087:8080
    environment:
      JAVA_OPTS: -Drocketmq.namesrv.addr=rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false -Drocketmq.config.accessKey=rocketmq2 -Drocketmq.config.secretKey=12345678
    volumes:
      - /rocketmq/console-ng/data:/tmp/rocketmq-console/data
    networks:
      donut-cloud-net:
        aliases:
          - rmqconsole
  xxl-job-admin:
#    restart: always
    # docker 镜像
    image: xuxueli/xxl-job-admin:2.4.0
    # 容器名称
    container_name: xxl-job-admin
    volumes:
      # 日志目录映射到主机目录
      - ./data/xxl-job/logs:/data/applogs
    ports:
      # 端口映射
      - "8800:8800"
    environment:
      # 设置启动参数
      PARAMS: '
        --server.port=8800
        --server.servlet.context-path=/xxl-job-admin
        --spring.datasource.url=jdbc:mysql://donut-cloud-mysql8:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
        --spring.datasource.username=root
        --spring.datasource.password=root@123,./
        --xxl.job.accessToken=donutcloudjobtoken1234567890'
    networks:
      - donut-cloud-net
  seata-server:
    image: apache/seata-server:2.1.0-slim
    container_name: seata-server
    ports:
      - "7091:7091"
      - "8091:8091"
    environment:
      - STORE_MODE=db
      # 以SEATA_IP作为host注册seata server
      - SEATA_IP=192.168.2.25
      - SEATA_PORT=8091
    volumes:
      - "./docker-config/seata:/seata-server/resources"
      - "./data/seata/logs:/logs"
#      - "/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime"        #设置系统时区
#      - "/usr/share/zoneinfo/Asia/Shanghai:/etc/timezone"  #设置时区

networks:
  donut-cloud-net:
    driver: bridge